syntax = "proto3";

package proto;

// Specify the Go package where the generated Go code should reside.
option go_package = "internal/proto";

// The sportsbook service definition.
service SportsbookService {
    // Sends a request to list all permatches available
    rpc ListPrematch (ListPrematchRequest) returns (ListPrematchResponse);
    rpc SendLiveOdds (LiveOddsRequest) returns (stream LiveOddsData);
    rpc SendLiveScore (LiveScoreRequest) returns (stream LiveScoreData);
}

// The request message containing the information needed to list games.
message ListPrematchRequest {
    // You can add filters or pagination details here if needed
}

// The response message containing the list of games.
message ListPrematchResponse {
    repeated Prematch data = 1;
}

// A Prematch message represents a game in the sportsbook.
message Prematch {
    string id = 1;
    string start_date = 2;
    string home_team = 3;
    string away_team = 4;
    bool is_live = 5;
    bool is_popular = 6;
    string tournament = 7;
    string status = 8;
    string sport = 9;
    string league = 10;
    TeamInfo home_team_info = 11;
    TeamInfo away_team_info = 12;
    string statsperform_id = 13;
    repeated Odds odds = 14;
}

message Odds {
    string id = 1;
    string sports_book_name = 2;
    string name = 3;
    double price = 4;
    double timestamp = 5;
    double bet_points = 6;
    bool is_main = 7;
    bool is_live = 8;
    string market_name = 9;
    string market = 10;
    double home_rotation_number = 11;
    double away_rotation_number = 12;
    string deep_link_url = 13;
    string player_id = 14;
    string selection = 15;
    string normalized_selection = 16;
    string selection_line = 17;
    double selection_points = 18;
}

message TeamInfo {
    string id = 1;
    string team_name = 2;
    string team_city = 3;
    string team_mascot = 4;
    string team_abbreviation = 5;
    string sport = 6;
    string league = 7;
}

message LiveOddsRequest {
    // Add any request fields if necessary
}

message LiveScoreRequest {
    // Add any request fields if necessary
}

message LiveOddsData {
    OddsData data= 1;
    string entry_id = 2;
    string type = 3;
}

message OddsData {
    string bet_name = 1;
    double bet_points = 2;
    double bet_price = 3;
    string bet_type = 4;
    string game_id = 5;
    string id = 6;
    bool is_live = 7;
    bool is_main = 8;
    string league = 9;
    string player_id = 10;
    string selection = 11;
    string selection_line = 12;
    double selection_points = 13;
    string sport = 14;
    string sportsbook = 15;
    double timestamp = 16;
}

message LiveScoreData {    
    ScoreData data = 1;
    string entry_id = 2;
}

message ScoreData {
    string game_id = 1;
    Score score = 2;
}

message Score {
    string clock = 1;
    double score_away_period_1 = 2;
    double score_away_period_1_tiebreak = 3;
    double score_away_period_2 = 4;
    double score_away_total = 5;
    double score_home_period_1 = 6;
    double score_home_period_1_tiebreak = 7;
    double score_home_period_2 = 8;
    double score_home_total = 9;
}