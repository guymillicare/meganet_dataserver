// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v5.26.1
// source: internal/proto/service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the information needed to list games.
type ListPrematchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPrematchRequest) Reset() {
	*x = ListPrematchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrematchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrematchRequest) ProtoMessage() {}

func (x *ListPrematchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrematchRequest.ProtoReflect.Descriptor instead.
func (*ListPrematchRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{0}
}

// The response message containing the list of games.
type ListPrematchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Prematch `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListPrematchResponse) Reset() {
	*x = ListPrematchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrematchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrematchResponse) ProtoMessage() {}

func (x *ListPrematchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrematchResponse.ProtoReflect.Descriptor instead.
func (*ListPrematchResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListPrematchResponse) GetData() []*Prematch {
	if x != nil {
		return x.Data
	}
	return nil
}

// A Prematch message represents a game in the sportsbook.
type Prematch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartDate      string    `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	HomeTeam       string    `protobuf:"bytes,3,opt,name=home_team,json=homeTeam,proto3" json:"home_team,omitempty"`
	AwayTeam       string    `protobuf:"bytes,4,opt,name=away_team,json=awayTeam,proto3" json:"away_team,omitempty"`
	IsLive         bool      `protobuf:"varint,5,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	IsPopular      bool      `protobuf:"varint,6,opt,name=is_popular,json=isPopular,proto3" json:"is_popular,omitempty"`
	Tournament     string    `protobuf:"bytes,7,opt,name=tournament,proto3" json:"tournament,omitempty"`
	Status         string    `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Sport          string    `protobuf:"bytes,9,opt,name=sport,proto3" json:"sport,omitempty"`
	League         string    `protobuf:"bytes,10,opt,name=league,proto3" json:"league,omitempty"`
	HomeTeamInfo   *TeamInfo `protobuf:"bytes,11,opt,name=home_team_info,json=homeTeamInfo,proto3" json:"home_team_info,omitempty"`
	AwayTeamInfo   *TeamInfo `protobuf:"bytes,12,opt,name=away_team_info,json=awayTeamInfo,proto3" json:"away_team_info,omitempty"`
	StatsperformId string    `protobuf:"bytes,13,opt,name=statsperform_id,json=statsperformId,proto3" json:"statsperform_id,omitempty"`
	Odds           []*Odds   `protobuf:"bytes,14,rep,name=odds,proto3" json:"odds,omitempty"`
}

func (x *Prematch) Reset() {
	*x = Prematch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prematch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prematch) ProtoMessage() {}

func (x *Prematch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prematch.ProtoReflect.Descriptor instead.
func (*Prematch) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{2}
}

func (x *Prematch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Prematch) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Prematch) GetHomeTeam() string {
	if x != nil {
		return x.HomeTeam
	}
	return ""
}

func (x *Prematch) GetAwayTeam() string {
	if x != nil {
		return x.AwayTeam
	}
	return ""
}

func (x *Prematch) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

func (x *Prematch) GetIsPopular() bool {
	if x != nil {
		return x.IsPopular
	}
	return false
}

func (x *Prematch) GetTournament() string {
	if x != nil {
		return x.Tournament
	}
	return ""
}

func (x *Prematch) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Prematch) GetSport() string {
	if x != nil {
		return x.Sport
	}
	return ""
}

func (x *Prematch) GetLeague() string {
	if x != nil {
		return x.League
	}
	return ""
}

func (x *Prematch) GetHomeTeamInfo() *TeamInfo {
	if x != nil {
		return x.HomeTeamInfo
	}
	return nil
}

func (x *Prematch) GetAwayTeamInfo() *TeamInfo {
	if x != nil {
		return x.AwayTeamInfo
	}
	return nil
}

func (x *Prematch) GetStatsperformId() string {
	if x != nil {
		return x.StatsperformId
	}
	return ""
}

func (x *Prematch) GetOdds() []*Odds {
	if x != nil {
		return x.Odds
	}
	return nil
}

type Odds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SportsBookName      string  `protobuf:"bytes,2,opt,name=sports_book_name,json=sportsBookName,proto3" json:"sports_book_name,omitempty"`
	Name                string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Price               float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Timestamp           float64 `protobuf:"fixed64,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BetPoints           float64 `protobuf:"fixed64,6,opt,name=bet_points,json=betPoints,proto3" json:"bet_points,omitempty"`
	IsMain              bool    `protobuf:"varint,7,opt,name=is_main,json=isMain,proto3" json:"is_main,omitempty"`
	IsLive              bool    `protobuf:"varint,8,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	MarketName          string  `protobuf:"bytes,9,opt,name=market_name,json=marketName,proto3" json:"market_name,omitempty"`
	Market              string  `protobuf:"bytes,10,opt,name=market,proto3" json:"market,omitempty"`
	HomeRotationNumber  float64 `protobuf:"fixed64,11,opt,name=home_rotation_number,json=homeRotationNumber,proto3" json:"home_rotation_number,omitempty"`
	AwayRotationNumber  float64 `protobuf:"fixed64,12,opt,name=away_rotation_number,json=awayRotationNumber,proto3" json:"away_rotation_number,omitempty"`
	DeepLinkUrl         string  `protobuf:"bytes,13,opt,name=deep_link_url,json=deepLinkUrl,proto3" json:"deep_link_url,omitempty"`
	PlayerId            string  `protobuf:"bytes,14,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Selection           string  `protobuf:"bytes,15,opt,name=selection,proto3" json:"selection,omitempty"`
	NormalizedSelection string  `protobuf:"bytes,16,opt,name=normalized_selection,json=normalizedSelection,proto3" json:"normalized_selection,omitempty"`
	SelectionLine       string  `protobuf:"bytes,17,opt,name=selection_line,json=selectionLine,proto3" json:"selection_line,omitempty"`
	SelectionPoints     float64 `protobuf:"fixed64,18,opt,name=selection_points,json=selectionPoints,proto3" json:"selection_points,omitempty"`
}

func (x *Odds) Reset() {
	*x = Odds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Odds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Odds) ProtoMessage() {}

func (x *Odds) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Odds.ProtoReflect.Descriptor instead.
func (*Odds) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{3}
}

func (x *Odds) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Odds) GetSportsBookName() string {
	if x != nil {
		return x.SportsBookName
	}
	return ""
}

func (x *Odds) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Odds) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Odds) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Odds) GetBetPoints() float64 {
	if x != nil {
		return x.BetPoints
	}
	return 0
}

func (x *Odds) GetIsMain() bool {
	if x != nil {
		return x.IsMain
	}
	return false
}

func (x *Odds) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

func (x *Odds) GetMarketName() string {
	if x != nil {
		return x.MarketName
	}
	return ""
}

func (x *Odds) GetMarket() string {
	if x != nil {
		return x.Market
	}
	return ""
}

func (x *Odds) GetHomeRotationNumber() float64 {
	if x != nil {
		return x.HomeRotationNumber
	}
	return 0
}

func (x *Odds) GetAwayRotationNumber() float64 {
	if x != nil {
		return x.AwayRotationNumber
	}
	return 0
}

func (x *Odds) GetDeepLinkUrl() string {
	if x != nil {
		return x.DeepLinkUrl
	}
	return ""
}

func (x *Odds) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Odds) GetSelection() string {
	if x != nil {
		return x.Selection
	}
	return ""
}

func (x *Odds) GetNormalizedSelection() string {
	if x != nil {
		return x.NormalizedSelection
	}
	return ""
}

func (x *Odds) GetSelectionLine() string {
	if x != nil {
		return x.SelectionLine
	}
	return ""
}

func (x *Odds) GetSelectionPoints() float64 {
	if x != nil {
		return x.SelectionPoints
	}
	return 0
}

type TeamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamName         string `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	TeamCity         string `protobuf:"bytes,3,opt,name=team_city,json=teamCity,proto3" json:"team_city,omitempty"`
	TeamMascot       string `protobuf:"bytes,4,opt,name=team_mascot,json=teamMascot,proto3" json:"team_mascot,omitempty"`
	TeamAbbreviation string `protobuf:"bytes,5,opt,name=team_abbreviation,json=teamAbbreviation,proto3" json:"team_abbreviation,omitempty"`
	Sport            string `protobuf:"bytes,6,opt,name=sport,proto3" json:"sport,omitempty"`
	League           string `protobuf:"bytes,7,opt,name=league,proto3" json:"league,omitempty"`
}

func (x *TeamInfo) Reset() {
	*x = TeamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamInfo) ProtoMessage() {}

func (x *TeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamInfo.ProtoReflect.Descriptor instead.
func (*TeamInfo) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{4}
}

func (x *TeamInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TeamInfo) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *TeamInfo) GetTeamCity() string {
	if x != nil {
		return x.TeamCity
	}
	return ""
}

func (x *TeamInfo) GetTeamMascot() string {
	if x != nil {
		return x.TeamMascot
	}
	return ""
}

func (x *TeamInfo) GetTeamAbbreviation() string {
	if x != nil {
		return x.TeamAbbreviation
	}
	return ""
}

func (x *TeamInfo) GetSport() string {
	if x != nil {
		return x.Sport
	}
	return ""
}

func (x *TeamInfo) GetLeague() string {
	if x != nil {
		return x.League
	}
	return ""
}

type LiveOddsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveOddsRequest) Reset() {
	*x = LiveOddsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveOddsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveOddsRequest) ProtoMessage() {}

func (x *LiveOddsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveOddsRequest.ProtoReflect.Descriptor instead.
func (*LiveOddsRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{5}
}

type LiveScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveScoreRequest) Reset() {
	*x = LiveScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveScoreRequest) ProtoMessage() {}

func (x *LiveScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveScoreRequest.ProtoReflect.Descriptor instead.
func (*LiveScoreRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{6}
}

type LiveOddsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *OddsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	EntryId string    `protobuf:"bytes,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	Type    string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LiveOddsData) Reset() {
	*x = LiveOddsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveOddsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveOddsData) ProtoMessage() {}

func (x *LiveOddsData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveOddsData.ProtoReflect.Descriptor instead.
func (*LiveOddsData) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{7}
}

func (x *LiveOddsData) GetData() *OddsData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LiveOddsData) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *LiveOddsData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type OddsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetName         string  `protobuf:"bytes,1,opt,name=bet_name,json=betName,proto3" json:"bet_name,omitempty"`
	BetPoints       float64 `protobuf:"fixed64,2,opt,name=bet_points,json=betPoints,proto3" json:"bet_points,omitempty"`
	BetPrice        float64 `protobuf:"fixed64,3,opt,name=bet_price,json=betPrice,proto3" json:"bet_price,omitempty"`
	BetType         string  `protobuf:"bytes,4,opt,name=bet_type,json=betType,proto3" json:"bet_type,omitempty"`
	GameId          string  `protobuf:"bytes,5,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Id              string  `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	IsLive          bool    `protobuf:"varint,7,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	IsMain          bool    `protobuf:"varint,8,opt,name=is_main,json=isMain,proto3" json:"is_main,omitempty"`
	League          string  `protobuf:"bytes,9,opt,name=league,proto3" json:"league,omitempty"`
	PlayerId        string  `protobuf:"bytes,10,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Selection       string  `protobuf:"bytes,11,opt,name=selection,proto3" json:"selection,omitempty"`
	SelectionLine   string  `protobuf:"bytes,12,opt,name=selection_line,json=selectionLine,proto3" json:"selection_line,omitempty"`
	SelectionPoints float64 `protobuf:"fixed64,13,opt,name=selection_points,json=selectionPoints,proto3" json:"selection_points,omitempty"`
	Sport           string  `protobuf:"bytes,14,opt,name=sport,proto3" json:"sport,omitempty"`
	Sportsbook      string  `protobuf:"bytes,15,opt,name=sportsbook,proto3" json:"sportsbook,omitempty"`
	Timestamp       float64 `protobuf:"fixed64,16,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OddsData) Reset() {
	*x = OddsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OddsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OddsData) ProtoMessage() {}

func (x *OddsData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OddsData.ProtoReflect.Descriptor instead.
func (*OddsData) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{8}
}

func (x *OddsData) GetBetName() string {
	if x != nil {
		return x.BetName
	}
	return ""
}

func (x *OddsData) GetBetPoints() float64 {
	if x != nil {
		return x.BetPoints
	}
	return 0
}

func (x *OddsData) GetBetPrice() float64 {
	if x != nil {
		return x.BetPrice
	}
	return 0
}

func (x *OddsData) GetBetType() string {
	if x != nil {
		return x.BetType
	}
	return ""
}

func (x *OddsData) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *OddsData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OddsData) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

func (x *OddsData) GetIsMain() bool {
	if x != nil {
		return x.IsMain
	}
	return false
}

func (x *OddsData) GetLeague() string {
	if x != nil {
		return x.League
	}
	return ""
}

func (x *OddsData) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *OddsData) GetSelection() string {
	if x != nil {
		return x.Selection
	}
	return ""
}

func (x *OddsData) GetSelectionLine() string {
	if x != nil {
		return x.SelectionLine
	}
	return ""
}

func (x *OddsData) GetSelectionPoints() float64 {
	if x != nil {
		return x.SelectionPoints
	}
	return 0
}

func (x *OddsData) GetSport() string {
	if x != nil {
		return x.Sport
	}
	return ""
}

func (x *OddsData) GetSportsbook() string {
	if x != nil {
		return x.Sportsbook
	}
	return ""
}

func (x *OddsData) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type LiveScoreData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *ScoreData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	EntryId string     `protobuf:"bytes,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
}

func (x *LiveScoreData) Reset() {
	*x = LiveScoreData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveScoreData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveScoreData) ProtoMessage() {}

func (x *LiveScoreData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveScoreData.ProtoReflect.Descriptor instead.
func (*LiveScoreData) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{9}
}

func (x *LiveScoreData) GetData() *ScoreData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LiveScoreData) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

type ScoreData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Score  *Score `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *ScoreData) Reset() {
	*x = ScoreData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreData) ProtoMessage() {}

func (x *ScoreData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreData.ProtoReflect.Descriptor instead.
func (*ScoreData) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{10}
}

func (x *ScoreData) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *ScoreData) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock                     string  `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	ScoreAwayPeriod_1         float64 `protobuf:"fixed64,2,opt,name=score_away_period_1,json=scoreAwayPeriod1,proto3" json:"score_away_period_1,omitempty"`
	ScoreAwayPeriod_1Tiebreak float64 `protobuf:"fixed64,3,opt,name=score_away_period_1_tiebreak,json=scoreAwayPeriod1Tiebreak,proto3" json:"score_away_period_1_tiebreak,omitempty"`
	ScoreAwayPeriod_2         float64 `protobuf:"fixed64,4,opt,name=score_away_period_2,json=scoreAwayPeriod2,proto3" json:"score_away_period_2,omitempty"`
	ScoreAwayTotal            float64 `protobuf:"fixed64,5,opt,name=score_away_total,json=scoreAwayTotal,proto3" json:"score_away_total,omitempty"`
	ScoreHomePeriod_1         float64 `protobuf:"fixed64,6,opt,name=score_home_period_1,json=scoreHomePeriod1,proto3" json:"score_home_period_1,omitempty"`
	ScoreHomePeriod_1Tiebreak float64 `protobuf:"fixed64,7,opt,name=score_home_period_1_tiebreak,json=scoreHomePeriod1Tiebreak,proto3" json:"score_home_period_1_tiebreak,omitempty"`
	ScoreHomePeriod_2         float64 `protobuf:"fixed64,8,opt,name=score_home_period_2,json=scoreHomePeriod2,proto3" json:"score_home_period_2,omitempty"`
	ScoreHomeTotal            float64 `protobuf:"fixed64,9,opt,name=score_home_total,json=scoreHomeTotal,proto3" json:"score_home_total,omitempty"`
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_internal_proto_service_proto_rawDescGZIP(), []int{11}
}

func (x *Score) GetClock() string {
	if x != nil {
		return x.Clock
	}
	return ""
}

func (x *Score) GetScoreAwayPeriod_1() float64 {
	if x != nil {
		return x.ScoreAwayPeriod_1
	}
	return 0
}

func (x *Score) GetScoreAwayPeriod_1Tiebreak() float64 {
	if x != nil {
		return x.ScoreAwayPeriod_1Tiebreak
	}
	return 0
}

func (x *Score) GetScoreAwayPeriod_2() float64 {
	if x != nil {
		return x.ScoreAwayPeriod_2
	}
	return 0
}

func (x *Score) GetScoreAwayTotal() float64 {
	if x != nil {
		return x.ScoreAwayTotal
	}
	return 0
}

func (x *Score) GetScoreHomePeriod_1() float64 {
	if x != nil {
		return x.ScoreHomePeriod_1
	}
	return 0
}

func (x *Score) GetScoreHomePeriod_1Tiebreak() float64 {
	if x != nil {
		return x.ScoreHomePeriod_1Tiebreak
	}
	return 0
}

func (x *Score) GetScoreHomePeriod_2() float64 {
	if x != nil {
		return x.ScoreHomePeriod_2
	}
	return 0
}

func (x *Score) GetScoreHomeTotal() float64 {
	if x != nil {
		return x.ScoreHomeTotal
	}
	return 0
}

var File_internal_proto_service_proto protoreflect.FileDescriptor

var file_internal_proto_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x03, 0x0a, 0x08, 0x50, 0x72,
	0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70,
	0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x35, 0x0a,
	0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61,
	0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x64, 0x64, 0x73, 0x52,
	0x04, 0x6f, 0x64, 0x64, 0x73, 0x22, 0xda, 0x04, 0x0a, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x76,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14,
	0x61, 0x77, 0x61, 0x79, 0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x61, 0x77, 0x61, 0x79,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x14, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6d, 0x61, 0x73, 0x63, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x73, 0x63, 0x6f, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x61, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x62, 0x62, 0x72, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x76, 0x65, 0x4f, 0x64, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x76, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x0c,
	0x4c, 0x69, 0x76, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x64, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xd0, 0x03, 0x0a, 0x08, 0x4f, 0x64, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x74, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x65,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x76,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x62,
	0x6f, 0x6f, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x50, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x09, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0xad, 0x03, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x2d, 0x0a, 0x13, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x41, 0x77, 0x61, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x31, 0x12, 0x3e,
	0x0a, 0x1c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x31, 0x5f, 0x74, 0x69, 0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x77, 0x61, 0x79, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x31, 0x54, 0x69, 0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x2d,
	0x0a, 0x13, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x41, 0x77, 0x61, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x32, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x77,
	0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x31, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x31, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x31, 0x5f, 0x74, 0x69,
	0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x31, 0x54, 0x69,
	0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x32, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x32, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x32,
	0xdd, 0x01, 0x0a, 0x11, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x65, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x4f, 0x64, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x12, 0x40, 0x0a,
	0x0d, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x42,
	0x10, 0x5a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_proto_service_proto_rawDescOnce sync.Once
	file_internal_proto_service_proto_rawDescData = file_internal_proto_service_proto_rawDesc
)

func file_internal_proto_service_proto_rawDescGZIP() []byte {
	file_internal_proto_service_proto_rawDescOnce.Do(func() {
		file_internal_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_proto_service_proto_rawDescData)
	})
	return file_internal_proto_service_proto_rawDescData
}

var file_internal_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_internal_proto_service_proto_goTypes = []interface{}{
	(*ListPrematchRequest)(nil),  // 0: proto.ListPrematchRequest
	(*ListPrematchResponse)(nil), // 1: proto.ListPrematchResponse
	(*Prematch)(nil),             // 2: proto.Prematch
	(*Odds)(nil),                 // 3: proto.Odds
	(*TeamInfo)(nil),             // 4: proto.TeamInfo
	(*LiveOddsRequest)(nil),      // 5: proto.LiveOddsRequest
	(*LiveScoreRequest)(nil),     // 6: proto.LiveScoreRequest
	(*LiveOddsData)(nil),         // 7: proto.LiveOddsData
	(*OddsData)(nil),             // 8: proto.OddsData
	(*LiveScoreData)(nil),        // 9: proto.LiveScoreData
	(*ScoreData)(nil),            // 10: proto.ScoreData
	(*Score)(nil),                // 11: proto.Score
}
var file_internal_proto_service_proto_depIdxs = []int32{
	2,  // 0: proto.ListPrematchResponse.data:type_name -> proto.Prematch
	4,  // 1: proto.Prematch.home_team_info:type_name -> proto.TeamInfo
	4,  // 2: proto.Prematch.away_team_info:type_name -> proto.TeamInfo
	3,  // 3: proto.Prematch.odds:type_name -> proto.Odds
	8,  // 4: proto.LiveOddsData.data:type_name -> proto.OddsData
	10, // 5: proto.LiveScoreData.data:type_name -> proto.ScoreData
	11, // 6: proto.ScoreData.score:type_name -> proto.Score
	0,  // 7: proto.SportsbookService.ListPrematch:input_type -> proto.ListPrematchRequest
	5,  // 8: proto.SportsbookService.SendLiveOdds:input_type -> proto.LiveOddsRequest
	6,  // 9: proto.SportsbookService.SendLiveScore:input_type -> proto.LiveScoreRequest
	1,  // 10: proto.SportsbookService.ListPrematch:output_type -> proto.ListPrematchResponse
	7,  // 11: proto.SportsbookService.SendLiveOdds:output_type -> proto.LiveOddsData
	9,  // 12: proto.SportsbookService.SendLiveScore:output_type -> proto.LiveScoreData
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_internal_proto_service_proto_init() }
func file_internal_proto_service_proto_init() {
	if File_internal_proto_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_proto_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrematchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrematchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prematch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Odds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveOddsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveOddsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OddsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveScoreData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_proto_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_proto_service_proto_goTypes,
		DependencyIndexes: file_internal_proto_service_proto_depIdxs,
		MessageInfos:      file_internal_proto_service_proto_msgTypes,
	}.Build()
	File_internal_proto_service_proto = out.File
	file_internal_proto_service_proto_rawDesc = nil
	file_internal_proto_service_proto_goTypes = nil
	file_internal_proto_service_proto_depIdxs = nil
}
